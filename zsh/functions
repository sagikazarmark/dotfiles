# Find non ASCI characters in a file
nonasci() {
	grep --color='auto' -P -n '[^\x00-\x7F]' $1
}

# Remove a host from SSH
rmhost() {
	[ $# -eq 0 ] && { echo "Usage: rmhost HOSTNAME"; return 1; }

	ips=$(host "$1" | awk -F'address' '{ print $2}' | sed -e 's/^ //g')
	ssh-keygen -R "$1"

	for ip in $ips; do
		ssh-keygen -R "$ip"
	done
}

# Kill all the processes matching a name
killproc() {
	[ $# -eq 0 ] && { echo "Usage: killproc PROCESSNAME"; return 1; }

	PROCESSES=($(ps aux | grep $1 | awk '{print $2}'))

	for proc in $PROCESSES; do
		kill -9 $proc
	done
}

# Make regular file out of a symlink
removelink() {
	if [ -L $1 ]; then
		temp="$(readlink "$1")";
		rm -rf "$1";
		cp -rf "$temp" "$1";
	fi
}

# Check which process listens on a certain port
wholistens() {
	lsof -n -i4TCP:$1 | grep LISTEN
}

# Source: https://github.com/terraform-providers/terraform-provider-google/issues/611#issuecomment-463677187
gcloudconf() {
    conf=$1
    if [[ -z $conf ]]; then
        conf=`gcloud config configurations list --format="value(name)" | fzf`

        if [[ -z $conf ]]; then
            echo "error: you did not choose any of the options"
            return 1
        fi
    elif [[ $(gcloud config configurations list --format="value(name)" | grep $conf > /dev/null) -ne 0 ]]; then
        echo "error: invalid configuration"
        return 1
    fi

    export CLOUDSDK_ACTIVE_CONFIG_NAME=$conf
    #gcloud config configurations activate $conf
    mkdir -p /tmp/gcloud
    export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcloud/$conf-key.json
    ACTIVE_ACCOUNT=$(cat ~/.config/gcloud/configurations/config_${conf} | grep account | awk '{print $3}')
    sqlite3 ~/.config/gcloud/credentials.db "SELECT value FROM credentials WHERE account_id = '${ACTIVE_ACCOUNT}'" > $GOOGLE_APPLICATION_CREDENTIALS

    if [[ $conf == "default" ]]; then
        unset KUBECONFIG
    else
        mkdir -p $HOME/.kube/configs/$conf
        export KUBECONFIG=$HOME/.kube/configs/$conf/config
    fi

    echo "switched to configuration: $conf"
}
