# vim:fileencoding=utf-8:foldmethod=marker

#: Window management {{{

map kitty_mod+enter no_op
map cmd+enter       no_op

#: You can open a new window running an arbitrary program, for
#: example::

#:     map kitty_mod+y      launch mutt

#: You can open a new window with the current working directory set to
#: the working directory of the current window using::

#:     map ctrl+alt+enter    launch --cwd=current

#: You can open a new window that is allowed to control kitty via the
#: kitty remote control facility by prefixing the command line with @.
#: Any programs running in that window will be allowed to control
#: kitty. For example::

#:     map ctrl+enter launch --allow-remote-control some_program

#: You can open a new window next to the currently active window or as
#: the first window, with::

#:     map ctrl+n launch --location=neighbor some_program
#:     map ctrl+f launch --location=first some_program

#: For more details, see launch.

map kitty_mod+n no_op
map cmd+n       no_op

#: Works like new_window above, except that it opens a top level OS
#: kitty window. In particular you can use new_os_window_with_cwd to
#: open a window with the current working directory.

map kitty_mod+w no_op
map kitty_mod+] no_op
map kitty_mod+[ no_op
map kitty_mod+f no_op
map kitty_mod+b no_op
map kitty_mod+` no_op
map kitty_mod+r no_op
map kitty_mod+1 no_op
map kitty_mod+2 no_op
map kitty_mod+3 no_op
map kitty_mod+4 no_op
map kitty_mod+5 no_op
map kitty_mod+6 no_op
map kitty_mod+7 no_op
map kitty_mod+8 no_op
map kitty_mod+9 no_op
map kitty_mod+0 no_op

map cmd+r no_op
#: }}}

#: Tab management {{{

map kitty_mod+right no_op
map kitty_mod+left  no_op
map kitty_mod+t     no_op
map kitty_mod+q     no_op
map shift+cmd+w     no_op
map kitty_mod+.     no_op
map kitty_mod+,     no_op
map kitty_mod+alt+t no_op

map shift+cmd+j no_op
map cmd+t no_op
map cmd+w no_op
map shift+cmd+w no_op

#: You can also create shortcuts to go to specific tabs, with 1 being
#: the first tab, 2 the second tab and -1 being the previously active
#: tab, and any number larger than the last tab being the last tab::

#:     map ctrl+alt+1 goto_tab 1
#:     map ctrl+alt+2 goto_tab 2

#: Just as with new_window above, you can also pass the name of
#: arbitrary commands to run when using new_tab and use
#: new_tab_with_cwd. Finally, if you want the new tab to open next to
#: the current tab rather than at the end of the tabs list, use::

#:     map ctrl+t new_tab !neighbor [optional cmd to run]
#: }}}

#: Layout management {{{

map kitty_mod+l no_op

#: You can also create shortcuts to switch to specific layouts::

#:     map ctrl+alt+t goto_layout tall
#:     map ctrl+alt+s goto_layout stack

#: Similarly, to switch back to the previous layout::

#:    map ctrl+alt+p last_used_layout

#: There is also a toggle layout function that switches to the named
#: layout or back to the previous layout if in the named layout.
#: Useful to temporarily "zoom" the active window by switching to the
#: stack layout::

#:     map ctrl+alt+z toggle_layout stack
#: }}}

